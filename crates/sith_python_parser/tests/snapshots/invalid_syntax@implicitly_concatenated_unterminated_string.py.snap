---
source: crates/sith_python_parser/tests/fixtures.rs
input_file: crates/sith_python_parser/resources/inline/err/implicitly_concatenated_unterminated_string.py
---
## AST

```
Module(
    ModModule {
        range: 0..47,
        body: [
            Expr(
                ExprStmt {
                    range: 0..7,
                    value: StringLiteral(
                        StringLiteralExpr {
                            range: 0..7,
                            value: StringLiteralValue {
                                inner: Single(
                                    StringLiteral {
                                        range: 0..7,
                                        value: "hello",
                                        flags: StringLiteralFlags {
                                            prefix: Empty,
                                            triple_quoted: false,
                                        },
                                    },
                                ),
                            },
                        },
                    ),
                },
            ),
            Expr(
                ExprStmt {
                    range: 15..20,
                    value: BinOp(
                        BinOpExpr {
                            range: 15..20,
                            left: NumberLiteral(
                                NumberLiteralExpr {
                                    range: 15..16,
                                    value: Int(
                                        1,
                                    ),
                                },
                            ),
                            op: Add,
                            right: NumberLiteral(
                                NumberLiteralExpr {
                                    range: 19..20,
                                    value: Int(
                                        1,
                                    ),
                                },
                            ),
                        },
                    ),
                },
            ),
            Expr(
                ExprStmt {
                    range: 21..40,
                    value: FString(
                        FStringExpr {
                            range: 21..40,
                            value: FStringValue {
                                inner: Concatenated(
                                    [
                                        Literal(
                                            StringLiteral {
                                                range: 21..28,
                                                value: "hello",
                                                flags: StringLiteralFlags {
                                                    prefix: Empty,
                                                    triple_quoted: false,
                                                },
                                            },
                                        ),
                                        FString(
                                            FString {
                                                range: 29..40,
                                                elements: [
                                                    Literal(
                                                        FStringLiteralElement {
                                                            range: 31..37,
                                                            value: "world ",
                                                        },
                                                    ),
                                                    Expression(
                                                        FStringExpressionElement {
                                                            range: 37..40,
                                                            expression: Name(
                                                                NameExpr {
                                                                    range: 38..39,
                                                                    id: Name("x"),
                                                                    ctx: Load,
                                                                },
                                                            ),
                                                            debug_text: None,
                                                            conversion: None,
                                                            format_spec: None,
                                                        },
                                                    ),
                                                ],
                                                flags: FStringFlags {
                                                    prefix: Regular,
                                                    triple_quoted: false,
                                                },
                                            },
                                        ),
                                    ],
                                ),
                            },
                        },
                    ),
                },
            ),
            Expr(
                ExprStmt {
                    range: 41..46,
                    value: BinOp(
                        BinOpExpr {
                            range: 41..46,
                            left: NumberLiteral(
                                NumberLiteralExpr {
                                    range: 41..42,
                                    value: Int(
                                        2,
                                    ),
                                },
                            ),
                            op: Add,
                            right: NumberLiteral(
                                NumberLiteralExpr {
                                    range: 45..46,
                                    value: Int(
                                        2,
                                    ),
                                },
                            ),
                        },
                    ),
                },
            ),
        ],
    },
)
```
## Errors

  |
1 | 'hello' 'world
  |         ^^^^^^ Syntax Error: missing closing quote in string literal
2 | 1 + 1
3 | 'hello' f'world {x}
  |


  |
1 | 'hello' 'world
  |               ^ Syntax Error: Expected a statement
2 | 1 + 1
3 | 'hello' f'world {x}
4 | 2 + 2
  |


  |
1 | 'hello' 'world
2 | 1 + 1
3 | 'hello' f'world {x}
  |                     Syntax Error: f-string: unterminated string
4 | 2 + 2
  |

---
source: crates/sith_python_parser/tests/fixtures.rs
input_file: crates/sith_python_parser/resources/inline/err/for_stmt_invalid_iter_expr.py
---
## AST

```
Module(
    ModModule {
        range: 0..71,
        body: [
            For(
                ForStmt {
                    range: 0..22,
                    is_async: false,
                    target: Name(
                        NameExpr {
                            range: 4..5,
                            id: Name("x"),
                            ctx: Store,
                        },
                    ),
                    iter: Starred(
                        StarredExpr {
                            range: 9..17,
                            value: BoolOp(
                                BoolOpExpr {
                                    range: 10..17,
                                    op: And,
                                    values: [
                                        Name(
                                            NameExpr {
                                                range: 10..11,
                                                id: Name("a"),
                                                ctx: Load,
                                            },
                                        ),
                                        Name(
                                            NameExpr {
                                                range: 16..17,
                                                id: Name("b"),
                                                ctx: Load,
                                            },
                                        ),
                                    ],
                                },
                            ),
                            ctx: Load,
                        },
                    ),
                    body: [
                        Expr(
                            ExprStmt {
                                range: 19..22,
                                value: EllipsisLiteral(
                                    EllipsisLiteralExpr {
                                        range: 19..22,
                                    },
                                ),
                            },
                        ),
                    ],
                    orelse: [],
                },
            ),
            For(
                ForStmt {
                    range: 23..44,
                    is_async: false,
                    target: Name(
                        NameExpr {
                            range: 27..28,
                            id: Name("x"),
                            ctx: Store,
                        },
                    ),
                    iter: Yield(
                        YieldExpr {
                            range: 32..39,
                            value: Some(
                                Name(
                                    NameExpr {
                                        range: 38..39,
                                        id: Name("a"),
                                        ctx: Load,
                                    },
                                ),
                            ),
                        },
                    ),
                    body: [
                        Expr(
                            ExprStmt {
                                range: 41..44,
                                value: EllipsisLiteral(
                                    EllipsisLiteralExpr {
                                        range: 41..44,
                                    },
                                ),
                            },
                        ),
                    ],
                    orelse: [],
                },
            ),
            For(
                ForStmt {
                    range: 45..60,
                    is_async: false,
                    target: Name(
                        NameExpr {
                            range: 49..55,
                            id: Name("target"),
                            ctx: Store,
                        },
                    ),
                    iter: Name(
                        NameExpr {
                            range: 59..60,
                            id: Name("x"),
                            ctx: Load,
                        },
                    ),
                    body: [],
                    orelse: [],
                },
            ),
            AnnAssign(
                AnnAssignStmt {
                    range: 64..70,
                    target: NumberLiteral(
                        NumberLiteralExpr {
                            range: 64..65,
                            value: Int(
                                1,
                            ),
                        },
                    ),
                    annotation: EllipsisLiteral(
                        EllipsisLiteralExpr {
                            range: 67..70,
                        },
                    ),
                    value: None,
                    simple: false,
                },
            ),
        ],
    },
)
```
## Errors

  |
1 | for x in *a and b: ...
  |           ^^^^^^^ Syntax Error: Boolean expression cannot be used here
2 | for x in yield a: ...
3 | for target in x := 1: ...
  |


  |
1 | for x in *a and b: ...
2 | for x in yield a: ...
  |          ^^^^^^^ Syntax Error: Yield expression cannot be used here
3 | for target in x := 1: ...
  |


  |
1 | for x in *a and b: ...
2 | for x in yield a: ...
3 | for target in x := 1: ...
  |                 ^^ Syntax Error: Expected ':', found ':='
  |


  |
1 | for x in *a and b: ...
2 | for x in yield a: ...
3 | for target in x := 1: ...
  |                    ^ Syntax Error: Invalid annotated assignment target
  |

---
source: crates/sith_python_parser/tests/fixtures.rs
input_file: crates/sith_python_parser/resources/invalid/expressions/arguments/unclosed_0.py
---
## AST

```
Module(
    ModModule {
        range: 0..26,
        body: [
            Expr(
                ExprStmt {
                    range: 0..5,
                    value: Call(
                        CallExpr {
                            range: 0..5,
                            func: Name(
                                NameExpr {
                                    range: 0..4,
                                    id: Name("call"),
                                    ctx: Load,
                                },
                            ),
                            arguments: Arguments {
                                range: 4..5,
                                args: [],
                                keywords: [],
                            },
                        },
                    ),
                },
            ),
            FunctionDef(
                FunctionDefStmt {
                    range: 7..26,
                    is_async: false,
                    decorator_list: [],
                    name: Identifier {
                        id: Name("foo"),
                        range: 11..14,
                    },
                    type_params: None,
                    parameters: Parameters {
                        range: 14..16,
                        posonlyargs: [],
                        args: [],
                        vararg: None,
                        kwonlyargs: [],
                        kwarg: None,
                    },
                    returns: None,
                    body: [
                        Pass(
                            PassStmt {
                                range: 22..26,
                            },
                        ),
                    ],
                },
            ),
        ],
    },
)
```
## Errors

  |
1 | call(
  |      ^ Syntax Error: Expected ')', found newline
2 | 
3 | def foo():
4 |     pass
  |

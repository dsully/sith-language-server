---
source: crates/sith_python_parser/tests/fixtures.rs
input_file: crates/sith_python_parser/resources/invalid/expressions/compare/invalid_order.py
---
## AST

```
Module(
    ModModule {
        range: 0..131,
        body: [
            Expr(
                ExprStmt {
                    range: 0..10,
                    value: Compare(
                        CompareExpr {
                            range: 0..10,
                            left: Name(
                                NameExpr {
                                    range: 0..1,
                                    id: Name("x"),
                                    ctx: Load,
                                },
                            ),
                            ops: [
                                In,
                            ],
                            comparators: [
                                UnaryOp(
                                    UnaryOpExpr {
                                        range: 5..10,
                                        op: Not,
                                        operand: Name(
                                            NameExpr {
                                                range: 9..10,
                                                id: Name("y"),
                                                ctx: Load,
                                            },
                                        ),
                                    },
                                ),
                            ],
                        },
                    ),
                },
            ),
            Assign(
                AssignStmt {
                    range: 35..41,
                    targets: [
                        Name(
                            NameExpr {
                                range: 35..36,
                                id: Name("x"),
                                ctx: Store,
                            },
                        ),
                    ],
                    value: Compare(
                        CompareExpr {
                            range: 38..41,
                            left: Name(
                                NameExpr {
                                    range: 38..38,
                                    id: Name(""),
                                    ctx: Invalid,
                                },
                            ),
                            ops: [
                                Gt,
                            ],
                            comparators: [
                                Name(
                                    NameExpr {
                                        range: 40..41,
                                        id: Name("y"),
                                        ctx: Load,
                                    },
                                ),
                            ],
                        },
                    ),
                },
            ),
            Expr(
                ExprStmt {
                    range: 120..121,
                    value: Name(
                        NameExpr {
                            range: 120..121,
                            id: Name("x"),
                            ctx: Load,
                        },
                    ),
                },
            ),
            Expr(
                ExprStmt {
                    range: 122..128,
                    value: UnaryOp(
                        UnaryOpExpr {
                            range: 122..128,
                            op: Not,
                            operand: Name(
                                NameExpr {
                                    range: 126..128,
                                    id: Name("is"),
                                    ctx: Load,
                                },
                            ),
                        },
                    ),
                },
            ),
            Expr(
                ExprStmt {
                    range: 129..130,
                    value: Name(
                        NameExpr {
                            range: 129..130,
                            id: Name("y"),
                            ctx: Load,
                        },
                    ),
                },
            ),
        ],
    },
)
```
## Errors

  |
1 | x in not y
  |      ^^^^^ Syntax Error: Boolean 'not' expression cannot be used here
2 | 
3 | # `=>` instead of `>=`
  |


  |
3 | # `=>` instead of `>=`
4 | x => y
  |    ^ Syntax Error: Expected an expression
5 | 
6 | # Same here as well, `not` without `in` is considered to be a unary operator
  |


  |
6 | # Same here as well, `not` without `in` is considered to be a unary operator
7 | x not is y
  |   ^^^ Syntax Error: Simple statements must be separated by newlines or semicolons
  |


  |
6 | # Same here as well, `not` without `in` is considered to be a unary operator
7 | x not is y
  |       ^^ Syntax Error: Expected an identifier, but found a keyword 'is' that cannot be used here
  |


  |
6 | # Same here as well, `not` without `in` is considered to be a unary operator
7 | x not is y
  |          ^ Syntax Error: Simple statements must be separated by newlines or semicolons
  |

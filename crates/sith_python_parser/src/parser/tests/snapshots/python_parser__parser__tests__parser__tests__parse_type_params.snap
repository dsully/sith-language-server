---
source: crates/sith_python_parser/src/parser/tests/parser.rs
expression: "parse(\"\ndef max[T](args: Iterable[T]) -> T:\n    ...\nclass list[T]:\n    ...\n\")"
---
ParsedFile {
    ast: Module(
        ModModule {
            range: 0..68,
            body: [
                FunctionDef(
                    FunctionDefStmt {
                        range: 1..44,
                        is_async: false,
                        decorator_list: [],
                        name: Identifier {
                            id: "max",
                            range: 5..8,
                        },
                        type_params: Some(
                            TypeParams {
                                range: 8..11,
                                type_params: [
                                    TypeVar(
                                        TypeParamTypeVar {
                                            range: 9..10,
                                            name: Identifier {
                                                id: "T",
                                                range: 9..10,
                                            },
                                            bound: None,
                                        },
                                    ),
                                ],
                            },
                        ),
                        parameters: Parameters {
                            range: 11..30,
                            posonlyargs: [],
                            args: [
                                ParameterWithDefault {
                                    range: 12..29,
                                    parameter: Parameter {
                                        range: 12..29,
                                        name: Identifier {
                                            id: "args",
                                            range: 12..16,
                                        },
                                        annotation: Some(
                                            Subscript(
                                                SubscriptExpr {
                                                    range: 18..29,
                                                    value: Name(
                                                        NameExpr {
                                                            range: 18..26,
                                                            id: "Iterable",
                                                            ctx: Load,
                                                        },
                                                    ),
                                                    slice: Name(
                                                        NameExpr {
                                                            range: 27..28,
                                                            id: "T",
                                                            ctx: Load,
                                                        },
                                                    ),
                                                    ctx: Load,
                                                },
                                            ),
                                        ),
                                    },
                                    default: None,
                                },
                            ],
                            vararg: None,
                            kwonlyargs: [],
                            kwarg: None,
                        },
                        returns: Some(
                            Name(
                                NameExpr {
                                    range: 34..35,
                                    id: "T",
                                    ctx: Load,
                                },
                            ),
                        ),
                        body: [
                            Expr(
                                ExprStmt {
                                    range: 41..44,
                                    value: EllipsisLiteral(
                                        EllipsisLiteralExpr {
                                            range: 41..44,
                                        },
                                    ),
                                },
                            ),
                        ],
                    },
                ),
                ClassDef(
                    ClassDefStmt {
                        range: 45..67,
                        decorator_list: [],
                        name: Identifier {
                            id: "list",
                            range: 51..55,
                        },
                        type_params: Some(
                            TypeParams {
                                range: 55..58,
                                type_params: [
                                    TypeVar(
                                        TypeParamTypeVar {
                                            range: 56..57,
                                            name: Identifier {
                                                id: "T",
                                                range: 56..57,
                                            },
                                            bound: None,
                                        },
                                    ),
                                ],
                            },
                        ),
                        arguments: None,
                        body: [
                            Expr(
                                ExprStmt {
                                    range: 64..67,
                                    value: EllipsisLiteral(
                                        EllipsisLiteralExpr {
                                            range: 64..67,
                                        },
                                    ),
                                },
                            ),
                        ],
                    },
                ),
            ],
        },
    ),
    parse_errors: [],
}
